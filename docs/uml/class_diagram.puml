@startuml
'https://plantuml.com/class-diagram

package Anki {
    class Collection {
        find_notes()
        find_cards()
        get_note()
        get_card()
        get_browser_column()
    }
    class MediaManager {
        files_in_str()
        dir()
    }
}

package NoteSize {
    together {
        class ButtonHooks {
            setup_hooks()
        }
        class ColumnHooks {
            setup_hooks()
        }
    }
    class DetailsFormatter {
        format_note_detailed_text(Note): str
    }
    class ButtonFormatter {
        get_zero_size_label(): ButtonLabel
        get_add_mode_label(Note): ButtonLabel
        get_edit_mode_label(NoteId): ButtonLabel
    }
    class SizeCalculator {
        calculate_note_size(Note): SizeBytes
        calculate_texts_size(Note): SizeBytes
        calculate_files_size(Note): SizeBytes
        file_sizes(Note): dict[MediaFile, SizeBytes]
        sort_by_size_desc(dict[MediaFile, SizeBytes]): dict[MediaFile, SizeBytes]
    }
    class SizeFormatter {
        bytes_to_str(SizeBytes): SizeStr
        file_size_to_str(MediaFile, SizeBytes, max_length): tuple[ShortFilename, SizeStr]
    }
    class ItemIdCache {
        warm_up_cache()
        get_note_id_by_card_id(CardId): NoteId
        get_note_size(NoteId, use_cache): SizeBytes
        get_note_size_str(NoteId, use_cache): SizeStr
    }
    class Init {
        configure_logging(addon_folder)
        initialize()
    }
}

Init --> ColumnHooks
Init --> ButtonHooks

ButtonHooks --> ButtonFormatter
ButtonHooks --> DetailsFormatter

ButtonFormatter --> ItemIdCache
ButtonFormatter --> SizeCalculator
ButtonFormatter --> SizeFormatter

DetailsFormatter --> SizeFormatter
DetailsFormatter --> SizeCalculator

SizeCalculator --> MediaManager

ColumnHooks --> Collection
ColumnHooks --> ItemIdCache

ItemIdCache --> Collection
ItemIdCache --> SizeCalculator
ItemIdCache --> SizeFormatter


@enduml